@model RealTimeCryptoCurrencies.Models.Currency
<html>
<head>
    <link rel="stylesheet" href="~/css/bootstrap.css">
    <link rel="stylesheet" href="~/css/custom.css">
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/signalr-client.js"></script>
    <script>
        var connection = new signalR.HubConnection('/currencyHub');

        connection.on('ChangeCurrency', data => {
            var x = (new Date()).getTime();
            var y = data.price;
            chart.series[0].addPoint({ x, y });

            oldPrice = $('#btcValue').text();
            if (data.price > parseFloat(oldPrice)) {
                $('#btcValue').text(data.price);
                $('#btcValue').removeClass();
                $('#btcValue').addClass("green");
            } else if (data.price < parseFloat(oldPrice)) {
                $('#btcValue').text(data.price);
                $('#btcValue').removeClass();
                $('#btcValue').addClass("red");
            } else {
                $('#btcValue').text(data.price);
                $('#btcValue').removeClass();
            }
        });

        connection.start();

    </script>
    <script src="https://code.highcharts.com/stock/highstock.js"></script>
    <script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
    <script>

        // Create the chart
        $(document).ready(function () {


            Highcharts.setOptions({
                global: {
                    useUTC: false
                }
            });
            chart = new Highcharts.stockChart({
                chart: {
                    renderTo: 'container',
                    defaultSeriesType: 'spline',
                },
                rangeSelector: {
                    buttons: [{
                        count: 1,
                        type: 'minute',
                        text: '1M'
                    }, {
                        count: 5,
                        type: 'minute',
                        text: '5M'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    inputEnabled: false,
                    selected: 2
                },
                exporting: { enabled: false },
                title: {
                    text: 'BTC - USDT'
                },
                series: [{
                    name: 'Bitcoin',
                    data: []
                }]
            });
        });

    </script>
</head>
<body>
    <div class="currencies">
        <div class="col-md-12 col-xs-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="group-left">
                        <img src="~/images/BTCUSDT-img.png" />
                        <h3>@Model.Name</h3>
                        <h6>@Model.Symbol</h6>
                    </div>
                    <div class="group-right">
                        <h3>$</h3><h1 id="btcValue">@Model.Price</h1>
                    </div>
                </div>
                <div class="panel-body">
                    <div id="container" style="height: 400px; width: auto"></div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
